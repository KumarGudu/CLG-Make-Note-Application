{"ast":null,"code":"var _jsxFileName = \"/home/gudu/tryouts/my-project/notes-app-master/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NoteContainer from \"./Components/NoteContainer/NoteContainer\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes-app\")) || []);\n\n  const addNote = color => {\n    const tempNotes = [...notes];\n    tempNotes.push({\n      id: Date.now() + \"\" + Math.floor(Math.random() * 78),\n      text: \"\",\n      time: Date.now(),\n      color\n    });\n    setNotes(tempNotes);\n  };\n\n  const deleteNote = id => {\n    const tempNotes = [...notes];\n    const index = tempNotes.findIndex(item => item.id === id);\n    if (index < 0) return;\n    tempNotes.splice(index, 1);\n    setNotes(tempNotes);\n  };\n\n  const updateText = (text, id) => {\n    const tempNotes = [...notes];\n    const index = tempNotes.findIndex(item => item.id === id);\n    if (index < 0) return;\n    tempNotes[index].text = text;\n    setNotes(tempNotes);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"notes-app\", JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h\", {\n      children: \"hello this is the main page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      addNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteContainer, {\n      notes: notes,\n      deleteNote: deleteNote,\n      updateText: updateText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"be7bPP1OjOVaXQ2E99pq89LYylg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gudu/tryouts/my-project/notes-app-master/src/App.js"],"names":["React","useEffect","useState","NoteContainer","Sidebar","App","notes","setNotes","JSON","parse","localStorage","getItem","addNote","color","tempNotes","push","id","Date","now","Math","floor","random","text","time","deleteNote","index","findIndex","item","splice","updateText","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAChCM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD,EADjB,CAAlC;;AAIA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,UAAMC,SAAS,GAAG,CAAC,GAAGR,KAAJ,CAAlB;AAEAQ,IAAAA,SAAS,CAACC,IAAV,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,KAAa,EAAb,GAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CADT;AAEbC,MAAAA,IAAI,EAAE,EAFO;AAGbC,MAAAA,IAAI,EAAEN,IAAI,CAACC,GAAL,EAHO;AAIbL,MAAAA;AAJa,KAAf;AAMAN,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACD,GAVD;;AAYA,QAAMU,UAAU,GAAIR,EAAD,IAAQ;AACzB,UAAMF,SAAS,GAAG,CAAC,GAAGR,KAAJ,CAAlB;AAEA,UAAMmB,KAAK,GAAGX,SAAS,CAACY,SAAV,CAAqBC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYA,EAA1C,CAAd;AACA,QAAIS,KAAK,GAAG,CAAZ,EAAe;AAEfX,IAAAA,SAAS,CAACc,MAAV,CAAiBH,KAAjB,EAAwB,CAAxB;AACAlB,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACD,GARD;;AAUA,QAAMe,UAAU,GAAG,CAACP,IAAD,EAAON,EAAP,KAAc;AAC/B,UAAMF,SAAS,GAAG,CAAC,GAAGR,KAAJ,CAAlB;AAEA,UAAMmB,KAAK,GAAGX,SAAS,CAACY,SAAV,CAAqBC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYA,EAA1C,CAAd;AACA,QAAIS,KAAK,GAAG,CAAZ,EAAe;AAEfX,IAAAA,SAAS,CAACW,KAAD,CAAT,CAAiBH,IAAjB,GAAwBA,IAAxB;AACAf,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACD,GARD;;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAkCtB,IAAI,CAACuB,SAAL,CAAezB,KAAf,CAAlC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEM;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,MAAA,UAAU,EAAEkB,UAFd;AAGE,MAAA,UAAU,EAAEK;AAHd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GApDQxB,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport NoteContainer from \"./Components/NoteContainer/NoteContainer\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    JSON.parse(localStorage.getItem(\"notes-app\")) || []\n  );\n\n  const addNote = (color) => {\n    const tempNotes = [...notes];\n\n    tempNotes.push({\n      id: Date.now() + \"\" + Math.floor(Math.random() * 78),\n      text: \"\",\n      time: Date.now(),\n      color,\n    });\n    setNotes(tempNotes);\n  };\n\n  const deleteNote = (id) => {\n    const tempNotes = [...notes];\n\n    const index = tempNotes.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    tempNotes.splice(index, 1);\n    setNotes(tempNotes);\n  };\n\n  const updateText = (text, id) => {\n    const tempNotes = [...notes];\n\n    const index = tempNotes.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    tempNotes[index].text = text;\n    setNotes(tempNotes);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"notes-app\", JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div className=\"App\">\n      <h>hello this is the main page</h>\n      <Sidebar addNote={addNote} />\n      <NoteContainer\n        notes={notes}\n        deleteNote={deleteNote}\n        updateText={updateText}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}